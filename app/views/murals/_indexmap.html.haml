!!!
%html
  %head
    %meta{:content => "initial-scale=1.0, user-scalable=no", :name => "viewport"}/
    %meta{:charset => "utf-8"}/
  %body
    #indexmap{:style => "width:580px; height:400px;"}
    #slider
      =render 'slider'
  
    :javascript

      function initMap() {
        var latlng = new google.maps.LatLng(54.602724, -5.929291);
        var map = new google.maps.Map(document.getElementById('indexmap'), {
          zoom: 13,
          center: latlng 
        });
        //side map 
        var latlng2 = new google.maps.LatLng(54.602724, -5.929291);
        map2= new google.maps.Map(document.getElementById("sliderMap"),{
          center: latlng,
          zoom:13,
        });
        //place marker on click for side map.
        google.maps.event.addListener(map2, "click", function(event){
          placeMarker(event.latLng);
          document.getElementById("lat").value = event.latLng.lat();
          document.getElementById("long").value = event.latLng.lng();
        }); 
        window.onload = function() {
          populateMap(map);         
        }; 
        var centerControlDiv = document.createElement('div');
        var centerControl = new CenterControl(centerControlDiv, map);
        centerControlDiv.index = 1;
        map.controls[google.maps.ControlPosition.TOP_CENTER].push(centerControlDiv);          
      } //initmap    

      var markersArray = [];
      var map2; 
      function placeMarker(location) {
        // first remove all markers if there are any
        deleteOverlays();
        var marker = new google.maps.Marker({
            position: location, 
            map: map2
        });
        // add marker in markers array
        markersArray.push(marker); 
      }

      // Deletes all markers in the array by removing references to them
      function deleteOverlays() {
        if (markersArray) {
          for (i in markersArray) {
            markersArray[i].setMap(null);
          }
          markersArray.length = 0;
        }
      }
             
      function populateMap(map){ //populates map with markers and labels              
        var marker, i
        for (i = 0; i < gon.murals.length; i++){  
          var artist = gon.murals[i].artist
          var muralId = gon.murals[i].id
          var image = gon.murals[i].images[0].url ; 
            
          var latlng = new google.maps.LatLng(gon.murals[i].lat, gon.murals[i].long);
          var marker = new google.maps.Marker({  
            map: map,
            position: latlng  
          });

          var content= '<div id="modal-header">'+
          '<h4><div id="modal-title">' + artist + '</h4>'+
          '<button type="button" class="close" data-dismiss="modal">&times;</button>'+
          '</div>'+
          '<div id=".modal-body">'+
          '<img src="' + image + '"style="width:600px;">'+
          '</div>'+
          '<div class="modal-footer">'+
          '<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>'+
          '</div>';
                    
          google.maps.event.addListener(marker,'click', (function(marker, content){ 
            return function() {           
              document.getElementById('modalC').innerHTML = content;
              $("#myModal").modal()   
            };
          })(marker, content)); 
        }
      }    

      function CenterControl(controlDiv, map) {

        // Set CSS for the control border.
        var controlUI = document.createElement('div');
        controlUI.style.backgroundColor = '#fff';
        controlUI.style.border = '2px solid #fff';
        controlUI.style.borderRadius = '3px';
        controlUI.style.boxShadow = '0 2px 6px rgba(0,0,0,.3)';
        controlUI.style.cursor = 'pointer';
        controlUI.style.marginBottom = '22px';
        controlUI.style.textAlign = 'center';
        controlUI.title = 'Click to recenter the map';
        controlDiv.appendChild(controlUI);
        
        // Set CSS for the control interior.
        var controlText = document.createElement('div');
        controlText.style.color = 'rgb(25,25,25)';
        controlText.style.fontFamily = 'Roboto,Arial,sans-serif';
        controlText.style.fontSize = '16px';
        controlText.style.lineHeight = '38px';
        controlText.style.paddingLeft = '5px';
        controlText.style.paddingRight = '5px';
        controlText.innerHTML = 'Add Mural';
        controlUI.appendChild(controlText);

        //close side panel on second click of "add mural" button
        $('#slider').slideReveal({
          trigger: $(controlUI)
        });
      }
      //close side panel on click of glyphicon
      $( ".close" ).click(function() {
        $('#slider').slideReveal("hide");
      });

    %script{:async => "", :defer => "defer", :src => "https://maps.googleapis.com/maps/api/js?key=AIzaSyDqnbDDZdGNHuoFZk6LM3Jwq2JE8iVv7OA&callback=initMap"}
      :cdata

    #myModal.modal.fade{:role => "dialog"}
      .modal-dialog
        #modalC.modal-content
          